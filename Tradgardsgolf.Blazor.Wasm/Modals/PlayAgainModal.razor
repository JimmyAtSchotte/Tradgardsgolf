@using Blazorise.Icons.Material
<p>Vill ni spela igen?</p>

<Container>
    <Row>
        <Column ColumnSize="ColumnSize.Is3">
            <Button Color="Color.Danger" Clicked="async () => await No()">Nej <Blazorise.Icon Name="MaterialIcons.Cancel"/></Button>
        </Column>
        <Column ColumnSize="ColumnSize.Is6">
            <Button Color="Color.Warning" Clicked="async () => await ChangePlayers()">Byt spelare <Blazorise.Icon Name="MaterialIcons.Sync"/></Button>
        </Column>
        <Column ColumnSize="ColumnSize.Is3">
            <Button Color="Color.Primary" Clicked="async () => await Yes()">Ja <Blazorise.Icon Name="MaterialIcons.PlayArrow"/></Button>
        </Column>
    </Row>
</Container>

@code {

    [CascadingParameter] BlazoredModalInstance? ModalInstance { get; set; }

    public enum Results
    {
        No,
        ChangePlayers,
        Yes
    }

    private async Task No()
    {
        if (ModalInstance != null) await ModalInstance.CloseAsync(ModalResult.Ok(Results.No));
    }

    private async Task ChangePlayers()
    {
        if (ModalInstance != null) await ModalInstance.CloseAsync(ModalResult.Ok(Results.ChangePlayers));
    }

    private async Task Yes()
    {
        if (ModalInstance != null) await ModalInstance.CloseAsync(ModalResult.Ok(Results.Yes));
    }

}