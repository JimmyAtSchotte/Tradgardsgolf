@using System.IO
@using System.Text
@using Tradgardsgolf.BlazorWasm.ApiServices
@using Tradgardsgolf.Contracts.Course
@inject IApiDispatcher ApiDispatcher;

@if (File is null)
{
    <Field>
        <FieldLabel>Ladda upp bild</FieldLabel>
        <FileEdit Changed="@OnFileUpload" Filter="image/*" />
    </Field>    
}
else
{
    <Field>
        <FieldLabel>Bildbeskärning</FieldLabel>
        <Cropper
            ImageFile="File"
            RequireAspectRatio="true"
            AspectRatio="0.525"
            Quality="80"
            InitCropWidth="300"
            CropperHeight="300"
            @ref="_cropper">
        </Cropper>
    </Field>
   
    <Button Color="Color.Primary" Clicked="async () => await SaveImage()">Spara bild <Icon Name="Blazorise.Icons.Material.MaterialIcons.Save" /></Button>
}

@code {
    [Parameter]
    public CourseResponse Course { get; set; }
    
    [CascadingParameter] 
    BlazoredModalInstance BlazoredModal { get; set; } = default!;
    
    public IBrowserFile File { get; set; }

    private Cropper _cropper;
    private string _fileExtension;

    private async Task OnFileUpload(FileChangedEventArgs e)
    {
        var file = e.Files.FirstOrDefault();
        
        if (file == null)
            return;
        
        using var result = new MemoryStream();
        await file.OpenReadStream(long.MaxValue).CopyToAsync(result);
        File = new StreamFile(new MemoryStream(result.ToArray()));

        _fileExtension = Path.GetExtension(file.Name);
    }

    private async Task SaveImage()
    {
        var croped = await _cropper.GetCropedResult();
        var imageBytes = await croped.GetDataAsync();
        var imageBase64 = Convert.ToBase64String(imageBytes);
        
        var course = await ApiDispatcher.Dispatch(new Tradgardsgolf.Contracts.Course.ChangeCourseImage()
        {
            Id = Course.Id,
            Extension = _fileExtension,
            ImageBase64 = imageBase64
        });
        
        await BlazoredModal.CloseAsync(ModalResult.Ok(course));
    }
}