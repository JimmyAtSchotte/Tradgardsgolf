@if (Display())
{
    <i class="material-icons">emoji_events</i>
    <span>@_bestScore.Player (@_bestScore.ToatalScore)</span>
}

@code {

    [CascadingParameter] public CascadingCourseStatistics CascadingCourseStatistics { get; set; }

    private BestScoreModel _bestScore;

    protected override void OnParametersSet()
    {
        if (CascadingCourseStatistics?.CourseStatisticResponse == null)
            return;

        _bestScore = CascadingCourseStatistics.CourseStatisticResponse.PlayerStatistics
            .OrderBy(x => x.BestScore.Score)
            .ThenBy(x => x.BestScore.Date)
            .Select(x => new BestScoreModel()
            {
                Date = x.BestScore.Date,
                Player = x.Name,
                ToatalScore = x.BestScore.Score
            })
            .FirstOrDefault();
    }

    private class BestScoreModel
    {
        public string Player { get; set; }
        public DateTime Date { get; set; }
        public int ToatalScore { get; set; }
    }

    private bool Display()
    {
        return CascadingCourseStatistics != null && _bestScore != null && !CascadingCourseStatistics.Loading;
    }

}