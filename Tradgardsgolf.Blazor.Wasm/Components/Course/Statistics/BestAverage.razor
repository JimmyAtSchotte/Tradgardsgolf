@if (Display())
{
    <i class="material-icons">insights</i>
    <span>@_bestAverageModels?.Player (@Math.Round(_bestAverageModels?.Average ?? 0, 1))</span>
}

@code {

    [CascadingParameter] public CascadingCourseStatistics? CascadingCourseStatistics { get; set; }

    private BestAverageModel? _bestAverageModels;

    protected override void OnParametersSet()
    {
        if (CascadingCourseStatistics?.CourseStatisticResponse == null)
            return;

        _bestAverageModels = CascadingCourseStatistics.CourseStatisticResponse.PlayerStatistics.OrderBy(x => x.AverageScore)
            .Select(x => new BestAverageModel(x.Name, x.AverageScore))
            .FirstOrDefault();
    }

    private class BestAverageModel(string player, double average)
    {
        public string Player { get; } = player;
        public double Average { get; } = average;
    }

    private bool Display()
    {
        return CascadingCourseStatistics != null && _bestAverageModels != null && !CascadingCourseStatistics.Loading;
    }

}