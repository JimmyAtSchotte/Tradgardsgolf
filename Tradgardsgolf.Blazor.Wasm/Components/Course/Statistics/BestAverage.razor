@if (Display())
{
    <i class="material-icons">insights</i>
    <span>@_bestAverageModels.Player (@Math.Round(_bestAverageModels.Average, 1))</span>
}

@code {

    [CascadingParameter] public CascadingCourseStatistics CascadingCourseStatistics { get; set; }

    private BestAverageModel _bestAverageModels;

    protected override void OnParametersSet()
    {
        if (CascadingCourseStatistics?.CourseStatisticResponse == null)
            return;

        _bestAverageModels = CascadingCourseStatistics.CourseStatisticResponse.PlayerStatistics.OrderBy(x => x.AverageScore)
            .Select(x => new BestAverageModel
            {
                Player = x.Name,
                Average = x.AverageScore
            })
            .FirstOrDefault();
    }

    private class BestAverageModel
    {
        public string Player { get; set; }
        public double Average { get; set; }
    }

    private bool Display()
    {
        return CascadingCourseStatistics != null && _bestAverageModels != null && !CascadingCourseStatistics.Loading;
    }

}